{"numTotalTestSuites":6,"numPassedTestSuites":6,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":9,"numPassedTests":1,"numFailedTests":8,"numPendingTests":0,"numTodoTests":0,"startTime":1750639481799,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["","BusinessLogicMigrationAgent","business logic extraction"],"fullName":" BusinessLogicMigrationAgent business logic extraction should extract business rules from Go code","status":"failed","title":"should extract business rules from Go code","duration":18,"failureMessages":["expected [] to have a length of 3 but got +0"],"location":{"line":96,"column":28}},{"ancestorTitles":["","BusinessLogicMigrationAgent","business logic extraction"],"fullName":" BusinessLogicMigrationAgent business logic extraction should extract complex business calculations","status":"failed","title":"should extract complex business calculations","duration":9,"failureMessages":["expected [] to deeply equal ArrayContaining{…}"],"location":{"line":154,"column":28}},{"ancestorTitles":["","BusinessLogicMigrationAgent","business logic extraction"],"fullName":" BusinessLogicMigrationAgent business logic extraction should identify data access patterns","status":"failed","title":"should identify data access patterns","duration":6,"failureMessages":["expected [] to deeply equal ArrayContaining{…}"],"location":{"line":193,"column":33}},{"ancestorTitles":["","BusinessLogicMigrationAgent","business logic migration with Claude Code"],"fullName":" BusinessLogicMigrationAgent business logic migration with Claude Code should migrate business rules to clean architecture","status":"failed","title":"should migrate business rules to clean architecture","duration":13,"failureMessages":["expected [] to have a length of 1 but got +0"],"location":{"line":264,"column":38}},{"ancestorTitles":["","BusinessLogicMigrationAgent","business logic migration with Claude Code"],"fullName":" BusinessLogicMigrationAgent business logic migration with Claude Code should preserve complex business workflows","status":"failed","title":"should preserve complex business workflows","duration":4,"failureMessages":["expected [] to have a length of 3 but got +0"],"location":{"line":316,"column":38}},{"ancestorTitles":["","BusinessLogicMigrationAgent","business logic migration with Claude Code"],"fullName":" BusinessLogicMigrationAgent business logic migration with Claude Code should handle migration failures gracefully","status":"failed","title":"should handle migration failures gracefully","duration":5,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":352,"column":36}},{"ancestorTitles":["","BusinessLogicMigrationAgent","business logic validation"],"fullName":" BusinessLogicMigrationAgent business logic validation should validate migrated business logic correctness","status":"passed","title":"should validate migrated business logic correctness","duration":1,"failureMessages":[]},{"ancestorTitles":["","BusinessLogicMigrationAgent","business logic validation"],"fullName":" BusinessLogicMigrationAgent business logic validation should detect missing business logic in migration","status":"failed","title":"should detect missing business logic in migration","duration":3,"failureMessages":["expected true to be false // Object.is equality"],"location":{"line":412,"column":40}},{"ancestorTitles":["","BusinessLogicMigrationAgent","integration with existing refactor flow"],"fullName":" BusinessLogicMigrationAgent integration with existing refactor flow should integrate with HybridRefactorAgent","status":"failed","title":"should integrate with HybridRefactorAgent","duration":7,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":462,"column":46}}],"startTime":1750639482733,"endTime":1750639482803,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/business-logic-migration-agent.test.ts"}]}