{"numTotalTestSuites":8,"numPassedTestSuites":8,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":19,"numPassedTests":18,"numFailedTests":1,"numPendingTests":0,"numTodoTests":0,"startTime":1750502643686,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["","executeAutoRefactor","successful execution"],"fullName":" executeAutoRefactor successful execution should execute complete workflow in dry-run mode","status":"failed","title":"should execute complete workflow in dry-run mode","duration":17,"failureMessages":["Cannot read properties of undefined (reading 'generated_tests')"],"location":{"line":116,"column":46}},{"ancestorTitles":["","executeAutoRefactor","successful execution"],"fullName":" executeAutoRefactor successful execution should execute complete workflow with changes applied","status":"skipped","title":"should execute complete workflow with changes applied","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","successful execution"],"fullName":" executeAutoRefactor successful execution should call all agents in correct order","status":"skipped","title":"should call all agents in correct order","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","successful execution"],"fullName":" executeAutoRefactor successful execution should resolve absolute path correctly","status":"skipped","title":"should resolve absolute path correctly","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","error handling and rollback"],"fullName":" executeAutoRefactor error handling and rollback should handle boundary discovery failure","status":"skipped","title":"should handle boundary discovery failure","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","error handling and rollback"],"fullName":" executeAutoRefactor error handling and rollback should handle refactoring failure with rollback","status":"skipped","title":"should handle refactoring failure with rollback","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","error handling and rollback"],"fullName":" executeAutoRefactor error handling and rollback should execute rollback when changes are applied and error occurs","status":"skipped","title":"should execute rollback when changes are applied and error occurs","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","error handling and rollback"],"fullName":" executeAutoRefactor error handling and rollback should not execute rollback for dry-run failures","status":"skipped","title":"should not execute rollback for dry-run failures","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","validation pipeline"],"fullName":" executeAutoRefactor validation pipeline should run compilation validation","status":"skipped","title":"should run compilation validation","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","validation pipeline"],"fullName":" executeAutoRefactor validation pipeline should handle compilation failures","status":"skipped","title":"should handle compilation failures","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","validation pipeline"],"fullName":" executeAutoRefactor validation pipeline should run test validation","status":"skipped","title":"should run test validation","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","validation pipeline"],"fullName":" executeAutoRefactor validation pipeline should generate performance metrics","status":"skipped","title":"should generate performance metrics","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","different project types"],"fullName":" executeAutoRefactor different project types should handle TypeScript projects","status":"skipped","title":"should handle TypeScript projects","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","different project types"],"fullName":" executeAutoRefactor different project types should handle projects without known build system","status":"skipped","title":"should handle projects without known build system","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","progress reporting"],"fullName":" executeAutoRefactor progress reporting should report progress through console logs","status":"skipped","title":"should report progress through console logs","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","progress reporting"],"fullName":" executeAutoRefactor progress reporting should report different modes correctly","status":"skipped","title":"should report different modes correctly","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","progress reporting"],"fullName":" executeAutoRefactor progress reporting should report timing information","status":"skipped","title":"should report timing information","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","auto-merge decisions"],"fullName":" executeAutoRefactor auto-merge decisions should handle auto-merge approval","status":"skipped","title":"should handle auto-merge approval","failureMessages":[]},{"ancestorTitles":["","executeAutoRefactor","auto-merge decisions"],"fullName":" executeAutoRefactor auto-merge decisions should handle manual review requirement","status":"skipped","title":"should handle manual review requirement","failureMessages":[]}],"startTime":1750502645026,"endTime":1750502645043,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/auto-refactor-workflow.test.ts"}]}