{"numTotalTestSuites":78,"numPassedTestSuites":78,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":175,"numPassedTests":117,"numFailedTests":58,"numPendingTests":0,"numTodoTests":0,"startTime":1750503357665,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["","E2E: CLI Commands","vf discover command"],"fullName":" E2E: CLI Commands vf discover command should discover boundaries in Go project","status":"failed","title":"should discover boundaries in Go project","duration":1036,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":52,"column":28}},{"ancestorTitles":["","E2E: CLI Commands","vf discover command"],"fullName":" E2E: CLI Commands vf discover command should handle empty projects gracefully","status":"passed","title":"should handle empty projects gracefully","duration":1153,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","vf plan command"],"fullName":" E2E: CLI Commands vf plan command should generate architectural plan","status":"passed","title":"should generate architectural plan","duration":307,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","vf plan command"],"fullName":" E2E: CLI Commands vf plan command should show AI discovery results","status":"passed","title":"should show AI discovery results","duration":755,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","vf refactor command"],"fullName":" E2E: CLI Commands vf refactor command should execute refactoring in dry-run mode","status":"failed","title":"should execute refactoring in dry-run mode","duration":1392,"failureMessages":["Command failed: node \"/Users/tmita/workspace/vibeflow/dist/cli.js\" refactor \"/tmp/e2e-cli-1750503362898-s2vhy1hxx\"\n❌ Error in refactor execution: Error: Refactor manifest not found: .vibeflow/patches/manifest.json\n    at TestSynthAgent.loadRefactorPlan (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:44:19)\n    at TestSynthAgent.synthesizeTests (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:15:35)\n    at runRefactor (file:///Users/tmita/workspace/vibeflow/dist/cli.js:138:54)\n    at async Command.<anonymous> (file:///Users/tmita/workspace/vibeflow/dist/cli.js:312:9)\n    at async Command.parseAsync (/Users/tmita/workspace/vibeflow/node_modules/commander/lib/command.js:1092:5)\n✖ Error: Refactor manifest not found: .vibeflow/patches/manifest.json\n    at TestSynthAgent.loadRefactorPlan (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:44:19)\n    at TestSynthAgent.synthesizeTests (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:15:35)\n    at runRefactor (file:///Users/tmita/workspace/vibeflow/dist/cli.js:138:54)\n    at async Command.<anonymous> (file:///Users/tmita/workspace/vibeflow/dist/cli.js:312:9)\n    at async Command.parseAsync (/Users/tmita/workspace/vibeflow/node_modules/commander/lib/command.js:1092:5)\n"],"location":{"line":44,"column":19}},{"ancestorTitles":["","E2E: CLI Commands","vf refactor command"],"fullName":" E2E: CLI Commands vf refactor command should apply changes with --apply flag","status":"failed","title":"should apply changes with --apply flag","duration":1248,"failureMessages":["Command failed: node \"/Users/tmita/workspace/vibeflow/dist/cli.js\" refactor \"/tmp/e2e-cli-1750503364290-9x89x1fdq\" --apply\n❌ Error in refactor execution: Error: Refactor manifest not found: .vibeflow/patches/manifest.json\n    at TestSynthAgent.loadRefactorPlan (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:44:19)\n    at TestSynthAgent.synthesizeTests (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:15:35)\n    at runRefactor (file:///Users/tmita/workspace/vibeflow/dist/cli.js:138:54)\n    at async Command.<anonymous> (file:///Users/tmita/workspace/vibeflow/dist/cli.js:312:9)\n    at async Command.parseAsync (/Users/tmita/workspace/vibeflow/node_modules/commander/lib/command.js:1092:5)\n✖ Error: Refactor manifest not found: .vibeflow/patches/manifest.json\n    at TestSynthAgent.loadRefactorPlan (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:44:19)\n    at TestSynthAgent.synthesizeTests (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:15:35)\n    at runRefactor (file:///Users/tmita/workspace/vibeflow/dist/cli.js:138:54)\n    at async Command.<anonymous> (file:///Users/tmita/workspace/vibeflow/dist/cli.js:312:9)\n    at async Command.parseAsync (/Users/tmita/workspace/vibeflow/node_modules/commander/lib/command.js:1092:5)\n"],"location":{"line":44,"column":19}},{"ancestorTitles":["","E2E: CLI Commands","vf refactor command"],"fullName":" E2E: CLI Commands vf refactor command should fail gracefully when plan files are missing","status":"passed","title":"should fail gracefully when plan files are missing","duration":972,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","vf auto command"],"fullName":" E2E: CLI Commands vf auto command should execute complete workflow in dry-run mode","status":"failed","title":"should execute complete workflow in dry-run mode","duration":376,"failureMessages":["Command failed: node \"/Users/tmita/workspace/vibeflow/dist/cli.js\" auto \"/tmp/e2e-cli-1750503366511-fbu68hox1\"\n    ❌ Failed to transform product.go: ENOENT: no such file or directory, open 'product.go'\n    ❌ Failed to transform main.go: ENOENT: no such file or directory, open 'main.go'\n    ❌ Failed to transform user.go: ENOENT: no such file or directory, open 'user.go'\n    ❌ Failed to transform product.go: ENOENT: no such file or directory, open 'product.go'\n\n❌ Workflow failed: Refactor manifest not found: .vibeflow/patches/manifest.json\n❌ Refactoring failed (0.0 min elapsed): Refactor manifest not found: .vibeflow/patches/manifest.json\n"],"location":{"line":890,"column":11}},{"ancestorTitles":["","E2E: CLI Commands","vf auto command"],"fullName":" E2E: CLI Commands vf auto command should apply changes with --apply flag","status":"failed","title":"should apply changes with --apply flag","duration":1481,"failureMessages":["Command failed: node \"/Users/tmita/workspace/vibeflow/dist/cli.js\" auto \"/tmp/e2e-cli-1750503366887-90i3j4i63\" --apply\n    ❌ Failed to transform product.go: ENOENT: no such file or directory, open 'product.go'\n    ❌ Failed to transform main.go: ENOENT: no such file or directory, open 'main.go'\n    ❌ Failed to transform user.go: ENOENT: no such file or directory, open 'user.go'\n    ❌ Failed to transform product.go: ENOENT: no such file or directory, open 'product.go'\n\n❌ Workflow failed: Refactor manifest not found: .vibeflow/patches/manifest.json\n❌ Refactoring failed (0.0 min elapsed): Refactor manifest not found: .vibeflow/patches/manifest.json\n"],"location":{"line":890,"column":11}},{"ancestorTitles":["","E2E: CLI Commands","vf auto command"],"fullName":" E2E: CLI Commands vf auto command should support language and pattern options","status":"failed","title":"should support language and pattern options","duration":322,"failureMessages":["Command failed: node \"/Users/tmita/workspace/vibeflow/dist/cli.js\" auto \"/tmp/e2e-cli-1750503368368-ags00zt91\" --language go --pattern clean-arch\n    ❌ Failed to transform product.go: ENOENT: no such file or directory, open 'product.go'\n    ❌ Failed to transform main.go: ENOENT: no such file or directory, open 'main.go'\n    ❌ Failed to transform user.go: ENOENT: no such file or directory, open 'user.go'\n    ❌ Failed to transform product.go: ENOENT: no such file or directory, open 'product.go'\n\n❌ Workflow failed: Refactor manifest not found: .vibeflow/patches/manifest.json\n❌ Refactoring failed (0.0 min elapsed): Refactor manifest not found: .vibeflow/patches/manifest.json\n"],"location":{"line":890,"column":11}},{"ancestorTitles":["","E2E: CLI Commands","vf auto command"],"fullName":" E2E: CLI Commands vf auto command should respect timeout option","status":"passed","title":"should respect timeout option","duration":1426,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","vf estimate command"],"fullName":" E2E: CLI Commands vf estimate command should provide cost estimation","status":"passed","title":"should provide cost estimation","duration":1608,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","vf estimate command"],"fullName":" E2E: CLI Commands vf estimate command should show detailed breakdown with --detailed flag","status":"passed","title":"should show detailed breakdown with --detailed flag","duration":515,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","vf full command"],"fullName":" E2E: CLI Commands vf full command should execute complete pipeline","status":"failed","title":"should execute complete pipeline","duration":371,"failureMessages":["Command failed: node \"/Users/tmita/workspace/vibeflow/dist/cli.js\" full \"/tmp/e2e-cli-1750503372240-niz7tq1ta\"\n❌ Error in refactor execution: Error: Refactor manifest not found: .vibeflow/patches/manifest.json\n    at TestSynthAgent.loadRefactorPlan (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:44:19)\n    at TestSynthAgent.synthesizeTests (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:15:35)\n    at runRefactor (file:///Users/tmita/workspace/vibeflow/dist/cli.js:138:54)\n    at async Command.<anonymous> (file:///Users/tmita/workspace/vibeflow/dist/cli.js:328:9)\n    at async Command.parseAsync (/Users/tmita/workspace/vibeflow/node_modules/commander/lib/command.js:1092:5)\n❌ Pipeline failed: Error: Refactor manifest not found: .vibeflow/patches/manifest.json\n    at TestSynthAgent.loadRefactorPlan (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:44:19)\n    at TestSynthAgent.synthesizeTests (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:15:35)\n    at runRefactor (file:///Users/tmita/workspace/vibeflow/dist/cli.js:138:54)\n    at async Command.<anonymous> (file:///Users/tmita/workspace/vibeflow/dist/cli.js:328:9)\n    at async Command.parseAsync (/Users/tmita/workspace/vibeflow/node_modules/commander/lib/command.js:1092:5)\n"],"location":{"line":44,"column":19}},{"ancestorTitles":["","E2E: CLI Commands","vf full command"],"fullName":" E2E: CLI Commands vf full command should apply changes with --apply flag","status":"failed","title":"should apply changes with --apply flag","duration":905,"failureMessages":["Command failed: node \"/Users/tmita/workspace/vibeflow/dist/cli.js\" full \"/tmp/e2e-cli-1750503372611-ovyvqp7mi\" --apply\n❌ Error in refactor execution: Error: Refactor manifest not found: .vibeflow/patches/manifest.json\n    at TestSynthAgent.loadRefactorPlan (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:44:19)\n    at TestSynthAgent.synthesizeTests (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:15:35)\n    at runRefactor (file:///Users/tmita/workspace/vibeflow/dist/cli.js:138:54)\n    at async Command.<anonymous> (file:///Users/tmita/workspace/vibeflow/dist/cli.js:328:9)\n    at async Command.parseAsync (/Users/tmita/workspace/vibeflow/node_modules/commander/lib/command.js:1092:5)\n❌ Pipeline failed: Error: Refactor manifest not found: .vibeflow/patches/manifest.json\n    at TestSynthAgent.loadRefactorPlan (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:44:19)\n    at TestSynthAgent.synthesizeTests (file:///Users/tmita/workspace/vibeflow/dist/core/agents/test-synth-agent.js:15:35)\n    at runRefactor (file:///Users/tmita/workspace/vibeflow/dist/cli.js:138:54)\n    at async Command.<anonymous> (file:///Users/tmita/workspace/vibeflow/dist/cli.js:328:9)\n    at async Command.parseAsync (/Users/tmita/workspace/vibeflow/node_modules/commander/lib/command.js:1092:5)\n"],"location":{"line":44,"column":19}},{"ancestorTitles":["","E2E: CLI Commands","CLI error handling"],"fullName":" E2E: CLI Commands CLI error handling should handle non-existent directories","status":"passed","title":"should handle non-existent directories","duration":431,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","CLI error handling"],"fullName":" E2E: CLI Commands CLI error handling should show help with --help flag","status":"passed","title":"should show help with --help flag","duration":1719,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","CLI error handling"],"fullName":" E2E: CLI Commands CLI error handling should show version with --version flag","status":"passed","title":"should show version with --version flag","duration":607,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","Configuration and output files"],"fullName":" E2E: CLI Commands Configuration and output files should create .vibeflow directory structure","status":"failed","title":"should create .vibeflow directory structure","duration":945,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":349,"column":28}},{"ancestorTitles":["","E2E: CLI Commands","Configuration and output files"],"fullName":" E2E: CLI Commands Configuration and output files should generate valid JSON output files","status":"passed","title":"should generate valid JSON output files","duration":429,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","Performance and reliability"],"fullName":" E2E: CLI Commands Performance and reliability should complete commands within reasonable time","status":"passed","title":"should complete commands within reasonable time","duration":1236,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","Performance and reliability"],"fullName":" E2E: CLI Commands Performance and reliability should be idempotent - running multiple times should produce same results","status":"passed","title":"should be idempotent - running multiple times should produce same results","duration":1286,"failureMessages":[]}],"startTime":1750503359646,"endTime":1750503380169,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/e2e/cli-commands.test.ts"},{"assertionResults":[{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should execute complete Go project transformation","status":"failed","title":"should execute complete Go project transformation","duration":456,"failureMessages":["Refactor manifest not found: .vibeflow/patches/manifest.json"],"location":{"line":86,"column":13}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should handle TypeScript project transformation","status":"failed","title":"should handle TypeScript project transformation","duration":138,"failureMessages":["Refactor manifest not found: .vibeflow/patches/manifest.json"],"location":{"line":86,"column":13}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should handle workflow errors gracefully with rollback","status":"failed","title":"should handle workflow errors gracefully with rollback","duration":137,"failureMessages":["Refactor manifest not found: .vibeflow/patches/manifest.json"],"location":{"line":86,"column":13}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should demonstrate progressive enhancement with AI fallback","status":"failed","title":"should demonstrate progressive enhancement with AI fallback","duration":407,"failureMessages":["Refactor manifest not found: .vibeflow/patches/manifest.json"],"location":{"line":86,"column":13}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should handle large projects efficiently","status":"failed","title":"should handle large projects efficiently","duration":150,"failureMessages":["Refactor manifest not found: .vibeflow/patches/manifest.json"],"location":{"line":86,"column":13}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should preserve business logic during transformation","status":"failed","title":"should preserve business logic during transformation","duration":44,"failureMessages":["Refactor manifest not found: .vibeflow/patches/manifest.json"],"location":{"line":86,"column":13}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should provide comprehensive metrics and reporting","status":"failed","title":"should provide comprehensive metrics and reporting","duration":194,"failureMessages":["Refactor manifest not found: .vibeflow/patches/manifest.json"],"location":{"line":86,"column":13}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should validate applied changes mode","status":"failed","title":"should validate applied changes mode","duration":1152,"failureMessages":["Refactor manifest not found: .vibeflow/patches/manifest.json"],"location":{"line":86,"column":13}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should handle edge cases and empty projects","status":"failed","title":"should handle edge cases and empty projects","duration":178,"failureMessages":["Refactor manifest not found: .vibeflow/patches/manifest.json"],"location":{"line":86,"column":13}}],"startTime":1750503370275,"endTime":1750503373131,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/e2e/full-workflow.test.ts"},{"assertionResults":[{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should discover boundaries and successfully refactor them","status":"failed","title":"should discover boundaries and successfully refactor them","duration":547,"failureMessages":["expected 0 to be greater than 0"],"location":{"line":41,"column":60}},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should handle empty projects gracefully","status":"failed","title":"should handle empty projects gracefully","duration":90,"failureMessages":["Target cannot be null or undefined."],"location":{"line":86,"column":46}},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should maintain boundary metadata through pipeline","status":"failed","title":"should maintain boundary metadata through pipeline","duration":40,"failureMessages":["expected undefined not to be undefined"],"location":{"line":98,"column":26}},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should validate generated code structure","status":"passed","title":"should validate generated code structure","duration":679,"failureMessages":[]},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should handle boundary confidence scores appropriately","status":"passed","title":"should handle boundary confidence scores appropriately","duration":42,"failureMessages":[]},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should handle file dependencies correctly","status":"passed","title":"should handle file dependencies correctly","duration":66,"failureMessages":[]},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should preserve semantic meaning across transformation","status":"passed","title":"should preserve semantic meaning across transformation","duration":54,"failureMessages":[]},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should generate appropriate test files","status":"failed","title":"should generate appropriate test files","duration":71,"failureMessages":["Cannot read properties of undefined (reading 'filter')"],"location":{"line":206,"column":54}},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should handle compilation validation","status":"failed","title":"should handle compilation validation","duration":67,"failureMessages":["expected undefined not to be undefined"],"location":{"line":224,"column":47}},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should provide meaningful metrics","status":"failed","title":"should provide meaningful metrics","duration":53,"failureMessages":["expected undefined not to be undefined"],"location":{"line":239,"column":36}}],"startTime":1750503375789,"endTime":1750503377502,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/integration/boundary-to-refactor.test.ts"},{"assertionResults":[{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should estimate costs before refactoring","status":"passed","title":"should estimate costs before refactoring","duration":29,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should track actual costs during refactoring","status":"passed","title":"should track actual costs during refactoring","duration":19,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should enforce cost limits","status":"passed","title":"should enforce cost limits","duration":21,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should handle daily limit rollover","status":"passed","title":"should handle daily limit rollover","duration":29,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should provide cost breakdown for complex projects","status":"passed","title":"should provide cost breakdown for complex projects","duration":17,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should handle cost estimation errors gracefully","status":"passed","title":"should handle cost estimation errors gracefully","duration":14,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should track multiple operations","status":"passed","title":"should track multiple operations","duration":15,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should persist cost data across sessions","status":"passed","title":"should persist cost data across sessions","duration":17,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should handle concurrent cost tracking","status":"passed","title":"should handle concurrent cost tracking","duration":20,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should validate cost limits hierarchy","status":"passed","title":"should validate cost limits hierarchy","duration":14,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should provide accurate cost projections","status":"passed","title":"should provide accurate cost projections","duration":20,"failureMessages":[]}],"startTime":1750503379577,"endTime":1750503379795,"status":"passed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/integration/cost-manager-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["","Performance Benchmarks","Boundary Discovery Performance"],"fullName":" Performance Benchmarks Boundary Discovery Performance should discover boundaries efficiently in small Go project (10 files)","status":"passed","title":"should discover boundaries efficiently in small Go project (10 files)","duration":1301,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmarks","Boundary Discovery Performance"],"fullName":" Performance Benchmarks Boundary Discovery Performance should discover boundaries efficiently in small TypeScript project (10 files)","status":"passed","title":"should discover boundaries efficiently in small TypeScript project (10 files)","duration":903,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmarks","Boundary Discovery Performance"],"fullName":" Performance Benchmarks Boundary Discovery Performance should discover boundaries efficiently in medium Go project (50 files)","status":"passed","title":"should discover boundaries efficiently in medium Go project (50 files)","duration":1831,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmarks","Boundary Discovery Performance"],"fullName":" Performance Benchmarks Boundary Discovery Performance should discover boundaries efficiently in medium TypeScript project (50 files)","status":"passed","title":"should discover boundaries efficiently in medium TypeScript project (50 files)","duration":738,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmarks","Boundary Discovery Performance"],"fullName":" Performance Benchmarks Boundary Discovery Performance should discover boundaries efficiently in large Go project (200 files)","status":"passed","title":"should discover boundaries efficiently in large Go project (200 files)","duration":2484,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmarks","Boundary Discovery Performance"],"fullName":" Performance Benchmarks Boundary Discovery Performance should discover boundaries efficiently in large TypeScript project (200 files)","status":"passed","title":"should discover boundaries efficiently in large TypeScript project (200 files)","duration":1322,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmarks","Full Refactor Performance"],"fullName":" Performance Benchmarks Full Refactor Performance should complete full refactoring workflow within time limits","status":"failed","title":"should complete full refactoring workflow within time limits","duration":462,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":115,"column":30}},{"ancestorTitles":["","Performance Benchmarks","Full Refactor Performance"],"fullName":" Performance Benchmarks Full Refactor Performance should handle concurrent operations efficiently","status":"failed","title":"should handle concurrent operations efficiently","duration":2530,"failureMessages":["expected 2486.5387499999997 to be less than 1986.2334000000003"],"location":{"line":147,"column":25}},{"ancestorTitles":["","Performance Benchmarks","Memory Usage Benchmarks"],"fullName":" Performance Benchmarks Memory Usage Benchmarks should maintain reasonable memory usage for large projects","status":"passed","title":"should maintain reasonable memory usage for large projects","duration":3966,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmarks","Scalability Tests"],"fullName":" Performance Benchmarks Scalability Tests should show linear or sub-linear scaling with project size","status":"passed","title":"should show linear or sub-linear scaling with project size","duration":3388,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmarks","Error Handling Performance"],"fullName":" Performance Benchmarks Error Handling Performance should fail fast on invalid projects","status":"passed","title":"should fail fast on invalid projects","duration":1497,"failureMessages":[]}],"startTime":1750503358789,"endTime":1750503379212,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/performance/benchmark.test.ts"},{"assertionResults":[{"ancestorTitles":["","executeAutoRefactor","successful execution"],"fullName":" executeAutoRefactor successful execution should execute complete workflow in dry-run mode","status":"failed","title":"should execute complete workflow in dry-run mode","duration":38,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","successful execution"],"fullName":" executeAutoRefactor successful execution should execute complete workflow with changes applied","status":"failed","title":"should execute complete workflow with changes applied","duration":1018,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","successful execution"],"fullName":" executeAutoRefactor successful execution should call all agents in correct order","status":"failed","title":"should call all agents in correct order","duration":8,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","successful execution"],"fullName":" executeAutoRefactor successful execution should resolve absolute path correctly","status":"failed","title":"should resolve absolute path correctly","duration":6,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","error handling and rollback"],"fullName":" executeAutoRefactor error handling and rollback should handle boundary discovery failure","status":"failed","title":"should handle boundary discovery failure","duration":10,"failureMessages":["expected [Function] to throw error including 'Boundary analysis failed' but got 'boundaryAgent.analyzeBoundaries is no…'"]},{"ancestorTitles":["","executeAutoRefactor","error handling and rollback"],"fullName":" executeAutoRefactor error handling and rollback should handle refactoring failure with rollback","status":"failed","title":"should handle refactoring failure with rollback","duration":1017,"failureMessages":["expected [Function] to throw error including 'Refactoring failed' but got 'boundaryAgent.analyzeBoundaries is no…'"],"location":{"line":296,"column":7}},{"ancestorTitles":["","executeAutoRefactor","error handling and rollback"],"fullName":" executeAutoRefactor error handling and rollback should execute rollback when changes are applied and error occurs","status":"failed","title":"should execute rollback when changes are applied and error occurs","duration":1013,"failureMessages":["expected [Function] to throw error including 'Test generation failed' but got 'boundaryAgent.analyzeBoundaries is no…'"],"location":{"line":305,"column":7}},{"ancestorTitles":["","executeAutoRefactor","error handling and rollback"],"fullName":" executeAutoRefactor error handling and rollback should not execute rollback for dry-run failures","status":"failed","title":"should not execute rollback for dry-run failures","duration":6,"failureMessages":["expected [Function] to throw error including 'Review failed' but got 'boundaryAgent.analyzeBoundaries is no…'"]},{"ancestorTitles":["","executeAutoRefactor","validation pipeline"],"fullName":" executeAutoRefactor validation pipeline should run compilation validation","status":"failed","title":"should run compilation validation","duration":1010,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","validation pipeline"],"fullName":" executeAutoRefactor validation pipeline should handle compilation failures","status":"failed","title":"should handle compilation failures","duration":1007,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","validation pipeline"],"fullName":" executeAutoRefactor validation pipeline should run test validation","status":"failed","title":"should run test validation","duration":1011,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","validation pipeline"],"fullName":" executeAutoRefactor validation pipeline should generate performance metrics","status":"failed","title":"should generate performance metrics","duration":8,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","different project types"],"fullName":" executeAutoRefactor different project types should handle TypeScript projects","status":"failed","title":"should handle TypeScript projects","duration":1011,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","different project types"],"fullName":" executeAutoRefactor different project types should handle projects without known build system","status":"failed","title":"should handle projects without known build system","duration":1031,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","progress reporting"],"fullName":" executeAutoRefactor progress reporting should report progress through console logs","status":"failed","title":"should report progress through console logs","duration":7,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","progress reporting"],"fullName":" executeAutoRefactor progress reporting should report different modes correctly","status":"failed","title":"should report different modes correctly","duration":6,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","progress reporting"],"fullName":" executeAutoRefactor progress reporting should report timing information","status":"failed","title":"should report timing information","duration":9,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","auto-merge decisions"],"fullName":" executeAutoRefactor auto-merge decisions should handle auto-merge approval","status":"failed","title":"should handle auto-merge approval","duration":1011,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}},{"ancestorTitles":["","executeAutoRefactor","auto-merge decisions"],"fullName":" executeAutoRefactor auto-merge decisions should handle manual review requirement","status":"failed","title":"should handle manual review requirement","duration":1007,"failureMessages":["boundaryAgent.analyzeBoundaries is not a function"],"location":{"line":66,"column":48}}],"startTime":1750503358904,"endTime":1750503369141,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/auto-refactor-workflow.test.ts"},{"assertionResults":[{"ancestorTitles":["","BuildFixerAgent","constructor"],"fullName":" BuildFixerAgent constructor should initialize with correct name and description","status":"passed","title":"should initialize with correct name and description","duration":1,"failureMessages":[]},{"ancestorTitles":["","BuildFixerAgent","execute"],"fullName":" BuildFixerAgent execute should fix Go import errors","status":"passed","title":"should fix Go import errors","duration":9,"failureMessages":[]},{"ancestorTitles":["","BuildFixerAgent","execute"],"fullName":" BuildFixerAgent execute should handle Go dependency errors","status":"passed","title":"should handle Go dependency errors","duration":4,"failureMessages":[]},{"ancestorTitles":["","BuildFixerAgent","execute"],"fullName":" BuildFixerAgent execute should fix TypeScript import errors","status":"passed","title":"should fix TypeScript import errors","duration":4,"failureMessages":[]},{"ancestorTitles":["","BuildFixerAgent","execute"],"fullName":" BuildFixerAgent execute should handle Python import errors","status":"passed","title":"should handle Python import errors","duration":4,"failureMessages":[]},{"ancestorTitles":["","BuildFixerAgent","execute"],"fullName":" BuildFixerAgent execute should handle build failures after fixes","status":"passed","title":"should handle build failures after fixes","duration":12,"failureMessages":[]},{"ancestorTitles":["","BuildFixerAgent","execute"],"fullName":" BuildFixerAgent execute should apply advanced Go fixes when initial build fails","status":"passed","title":"should apply advanced Go fixes when initial build fails","duration":6,"failureMessages":[]},{"ancestorTitles":["","BuildFixerAgent","execute"],"fullName":" BuildFixerAgent execute should handle empty build errors","status":"passed","title":"should handle empty build errors","duration":2,"failureMessages":[]},{"ancestorTitles":["","BuildFixerAgent","execute"],"fullName":" BuildFixerAgent execute should generate confidence scores for fixes","status":"passed","title":"should generate confidence scores for fixes","duration":3,"failureMessages":[]},{"ancestorTitles":["","BuildFixerAgent","error categorization"],"fullName":" BuildFixerAgent error categorization should correctly categorize errors by type","status":"passed","title":"should correctly categorize errors by type","duration":1,"failureMessages":[]},{"ancestorTitles":["","BuildFixerAgent","patch generation"],"fullName":" BuildFixerAgent patch generation should generate correct patches","status":"passed","title":"should generate correct patches","duration":1,"failureMessages":[]}],"startTime":1750503378527,"endTime":1750503378576,"status":"passed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/build-fixer-agent.test.ts"},{"assertionResults":[{"ancestorTitles":["","CostManager","constructor"],"fullName":" CostManager constructor should initialize with project path","status":"passed","title":"should initialize with project path","duration":2,"failureMessages":[]},{"ancestorTitles":["","CostManager","initialize"],"fullName":" CostManager initialize should create config directory if not exists","status":"passed","title":"should create config directory if not exists","duration":4,"failureMessages":[]},{"ancestorTitles":["","CostManager","initialize"],"fullName":" CostManager initialize should create default config if not exists","status":"passed","title":"should create default config if not exists","duration":2,"failureMessages":[]},{"ancestorTitles":["","CostManager","initialize"],"fullName":" CostManager initialize should load existing config if available","status":"passed","title":"should load existing config if available","duration":2,"failureMessages":[]},{"ancestorTitles":["","CostManager","checkLimits"],"fullName":" CostManager checkLimits should allow operation within per-run limit","status":"passed","title":"should allow operation within per-run limit","duration":0,"failureMessages":[]},{"ancestorTitles":["","CostManager","checkLimits"],"fullName":" CostManager checkLimits should reject operation exceeding per-run limit","status":"passed","title":"should reject operation exceeding per-run limit","duration":3,"failureMessages":[]},{"ancestorTitles":["","CostManager","checkLimits"],"fullName":" CostManager checkLimits should reject operation exceeding daily limit","status":"passed","title":"should reject operation exceeding daily limit","duration":5,"failureMessages":[]},{"ancestorTitles":["","CostManager","checkLimits"],"fullName":" CostManager checkLimits should reject operation exceeding monthly limit","status":"passed","title":"should reject operation exceeding monthly limit","duration":1,"failureMessages":[]},{"ancestorTitles":["","CostManager","recordUsage"],"fullName":" CostManager recordUsage should record operation usage","status":"passed","title":"should record operation usage","duration":3,"failureMessages":[]},{"ancestorTitles":["","CostManager","recordUsage"],"fullName":" CostManager recordUsage should update usage report after recording","status":"passed","title":"should update usage report after recording","duration":0,"failureMessages":[]},{"ancestorTitles":["","CostManager","getUsageReport"],"fullName":" CostManager getUsageReport should return empty usage for new instance","status":"passed","title":"should return empty usage for new instance","duration":0,"failureMessages":[]},{"ancestorTitles":["","CostManager","getUsageReport"],"fullName":" CostManager getUsageReport should return current limits","status":"passed","title":"should return current limits","duration":1,"failureMessages":[]},{"ancestorTitles":["","CostManager","updateLimits"],"fullName":" CostManager updateLimits should update cost limits","status":"passed","title":"should update cost limits","duration":2,"failureMessages":[]},{"ancestorTitles":["","CostManager","error handling"],"fullName":" CostManager error handling should handle file system errors gracefully","status":"passed","title":"should handle file system errors gracefully","duration":3,"failureMessages":[]},{"ancestorTitles":["","CostManager","error handling"],"fullName":" CostManager error handling should handle corrupted config files","status":"passed","title":"should handle corrupted config files","duration":0,"failureMessages":[]},{"ancestorTitles":["","CostManager","error handling"],"fullName":" CostManager error handling should handle missing usage file gracefully","status":"passed","title":"should handle missing usage file gracefully","duration":1,"failureMessages":[]},{"ancestorTitles":["","CostManager","usage history management"],"fullName":" CostManager usage history management should filter out old usage records","status":"passed","title":"should filter out old usage records","duration":0,"failureMessages":[]}],"startTime":1750503373668,"endTime":1750503373700,"status":"passed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/cost-manager.test.ts"},{"assertionResults":[{"ancestorTitles":["","EnhancedBoundaryAgent","constructor"],"fullName":" EnhancedBoundaryAgent constructor should initialize with project path","status":"passed","title":"should initialize with project path","duration":3,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","constructor"],"fullName":" EnhancedBoundaryAgent constructor should accept optional config and user boundaries","status":"passed","title":"should accept optional config and user boundaries","duration":1,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","analyzeBoundaries"],"fullName":" EnhancedBoundaryAgent analyzeBoundaries should discover boundaries from Go code","status":"passed","title":"should discover boundaries from Go code","duration":15,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","analyzeBoundaries"],"fullName":" EnhancedBoundaryAgent analyzeBoundaries should generate confidence metrics","status":"passed","title":"should generate confidence metrics","duration":7,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","analyzeBoundaries"],"fullName":" EnhancedBoundaryAgent analyzeBoundaries should discover domain-specific boundaries","status":"passed","title":"should discover domain-specific boundaries","duration":6,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","analyzeBoundaries"],"fullName":" EnhancedBoundaryAgent analyzeBoundaries should assign semantic keywords to boundaries","status":"passed","title":"should assign semantic keywords to boundaries","duration":4,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","analyzeBoundaries"],"fullName":" EnhancedBoundaryAgent analyzeBoundaries should generate recommendations","status":"passed","title":"should generate recommendations","duration":11,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","analyzeBoundaries"],"fullName":" EnhancedBoundaryAgent analyzeBoundaries should write output files","status":"skipped","title":"should write output files","failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","error handling"],"fullName":" EnhancedBoundaryAgent error handling should handle file read errors gracefully","status":"passed","title":"should handle file read errors gracefully","duration":5,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","error handling"],"fullName":" EnhancedBoundaryAgent error handling should handle empty project directories","status":"passed","title":"should handle empty project directories","duration":4,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","error handling"],"fullName":" EnhancedBoundaryAgent error handling should handle non-source files gracefully","status":"passed","title":"should handle non-source files gracefully","duration":1,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","language detection"],"fullName":" EnhancedBoundaryAgent language detection should detect Go projects","status":"passed","title":"should detect Go projects","duration":2,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","language detection"],"fullName":" EnhancedBoundaryAgent language detection should detect TypeScript projects","status":"passed","title":"should detect TypeScript projects","duration":2,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","boundary merging"],"fullName":" EnhancedBoundaryAgent boundary merging should merge user-defined boundaries with auto-discovered ones","status":"skipped","title":"should merge user-defined boundaries with auto-discovered ones","failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","confidence calculation"],"fullName":" EnhancedBoundaryAgent confidence calculation should calculate higher confidence for well-structured code","status":"passed","title":"should calculate higher confidence for well-structured code","duration":5,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","confidence calculation"],"fullName":" EnhancedBoundaryAgent confidence calculation should calculate lower confidence for mixed code","status":"passed","title":"should calculate lower confidence for mixed code","duration":1,"failureMessages":[]}],"startTime":1750503358947,"endTime":1750503359020,"status":"passed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/enhanced-boundary-agent.test.ts"},{"assertionResults":[{"ancestorTitles":["","EnhancedTestSynthAgent","constructor"],"fullName":" EnhancedTestSynthAgent constructor should initialize with correct name and description","status":"passed","title":"should initialize with correct name and description","duration":2,"failureMessages":[]},{"ancestorTitles":["","EnhancedTestSynthAgent","execute"],"fullName":" EnhancedTestSynthAgent execute should analyze coverage and generate tests for Go project","status":"passed","title":"should analyze coverage and generate tests for Go project","duration":18,"failureMessages":[]},{"ancestorTitles":["","EnhancedTestSynthAgent","execute"],"fullName":" EnhancedTestSynthAgent execute should identify coverage gaps","status":"passed","title":"should identify coverage gaps","duration":11,"failureMessages":[]},{"ancestorTitles":["","EnhancedTestSynthAgent","execute"],"fullName":" EnhancedTestSynthAgent execute should generate template-based tests when AI is disabled","status":"passed","title":"should generate template-based tests when AI is disabled","duration":9,"failureMessages":[]},{"ancestorTitles":["","EnhancedTestSynthAgent","execute"],"fullName":" EnhancedTestSynthAgent execute should generate AI-powered tests when enabled","status":"passed","title":"should generate AI-powered tests when enabled","duration":7,"failureMessages":[]},{"ancestorTitles":["","EnhancedTestSynthAgent","execute"],"fullName":" EnhancedTestSynthAgent execute should handle Python test generation","status":"passed","title":"should handle Python test generation","duration":7,"failureMessages":[]},{"ancestorTitles":["","EnhancedTestSynthAgent","execute"],"fullName":" EnhancedTestSynthAgent execute should handle TypeScript test generation","status":"passed","title":"should handle TypeScript test generation","duration":5,"failureMessages":[]},{"ancestorTitles":["","EnhancedTestSynthAgent","execute"],"fullName":" EnhancedTestSynthAgent execute should prioritize critical gaps","status":"passed","title":"should prioritize critical gaps","duration":4,"failureMessages":[]},{"ancestorTitles":["","EnhancedTestSynthAgent","execute"],"fullName":" EnhancedTestSynthAgent execute should respect coverage targets","status":"passed","title":"should respect coverage targets","duration":3,"failureMessages":[]},{"ancestorTitles":["","EnhancedTestSynthAgent","execute"],"fullName":" EnhancedTestSynthAgent execute should track AI usage costs","status":"passed","title":"should track AI usage costs","duration":6,"failureMessages":[]},{"ancestorTitles":["","EnhancedTestSynthAgent","coverage analysis"],"fullName":" EnhancedTestSynthAgent coverage analysis should correctly parse coverage reports","status":"passed","title":"should correctly parse coverage reports","duration":0,"failureMessages":[]},{"ancestorTitles":["","EnhancedTestSynthAgent","test generation strategies"],"fullName":" EnhancedTestSynthAgent test generation strategies should select appropriate strategy based on gap size","status":"passed","title":"should select appropriate strategy based on gap size","duration":1,"failureMessages":[]}],"startTime":1750503379023,"endTime":1750503379096,"status":"passed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/enhanced-test-synth-agent.test.ts"},{"assertionResults":[{"ancestorTitles":["","HybridRefactorAgent","constructor"],"fullName":" HybridRefactorAgent constructor should initialize with project path","status":"passed","title":"should initialize with project path","duration":8,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","constructor"],"fullName":" HybridRefactorAgent constructor should detect AI availability","status":"passed","title":"should detect AI availability","duration":2,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","estimateCost"],"fullName":" HybridRefactorAgent estimateCost should estimate cost for boundaries","status":"passed","title":"should estimate cost for boundaries","duration":3,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","estimateCost"],"fullName":" HybridRefactorAgent estimateCost should provide detailed cost breakdown","status":"passed","title":"should provide detailed cost breakdown","duration":2,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","estimateCost"],"fullName":" HybridRefactorAgent estimateCost should estimate different costs for different file sizes","status":"failed","title":"should estimate different costs for different file sizes","duration":11,"failureMessages":["expected 0.0025872 to be greater than 0.0025872"],"location":{"line":127,"column":43}},{"ancestorTitles":["","HybridRefactorAgent","executeRefactoring"],"fullName":" HybridRefactorAgent executeRefactoring should execute refactoring in template mode","status":"passed","title":"should execute refactoring in template mode","duration":2354,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","executeRefactoring"],"fullName":" HybridRefactorAgent executeRefactoring should generate clean architecture structure","status":"failed","title":"should generate clean architecture structure","duration":2350,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":191,"column":81}},{"ancestorTitles":["","HybridRefactorAgent","executeRefactoring"],"fullName":" HybridRefactorAgent executeRefactoring should generate tests for each layer","status":"failed","title":"should generate tests for each layer","duration":2349,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":204,"column":81}},{"ancestorTitles":["","HybridRefactorAgent","executeRefactoring"],"fullName":" HybridRefactorAgent executeRefactoring should handle dry-run mode","status":"failed","title":"should handle dry-run mode","duration":2348,"failureMessages":["Cannot read properties of undefined (reading 'length')"],"location":{"line":211,"column":37}},{"ancestorTitles":["","HybridRefactorAgent","executeRefactoring"],"fullName":" HybridRefactorAgent executeRefactoring should apply changes when requested","status":"passed","title":"should apply changes when requested","duration":2352,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","template generation"],"fullName":" HybridRefactorAgent template generation should generate domain entities","status":"passed","title":"should generate domain entities","duration":596,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","template generation"],"fullName":" HybridRefactorAgent template generation should generate usecase services","status":"passed","title":"should generate usecase services","duration":599,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","template generation"],"fullName":" HybridRefactorAgent template generation should generate repository interfaces","status":"passed","title":"should generate repository interfaces","duration":599,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","template generation"],"fullName":" HybridRefactorAgent template generation should generate HTTP handlers","status":"passed","title":"should generate HTTP handlers","duration":594,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","AI enhancement"],"fullName":" HybridRefactorAgent AI enhancement should use AI when available","status":"failed","title":"should use AI when available","duration":2141,"failureMessages":["expected \"spy\" to be called at least once"],"location":{"line":327,"column":42}},{"ancestorTitles":["","HybridRefactorAgent","AI enhancement"],"fullName":" HybridRefactorAgent AI enhancement should fallback to templates when AI fails","status":"failed","title":"should fallback to templates when AI fails","duration":2143,"failureMessages":["Cannot read properties of undefined (reading 'length')"],"location":{"line":345,"column":37}},{"ancestorTitles":["","HybridRefactorAgent","validation"],"fullName":" HybridRefactorAgent validation should validate generated code","status":"failed","title":"should validate generated code","duration":2100,"failureMessages":["expected undefined not to be undefined"],"location":{"line":353,"column":41}},{"ancestorTitles":["","HybridRefactorAgent","validation"],"fullName":" HybridRefactorAgent validation should handle compilation failures","status":"failed","title":"should handle compilation failures","duration":2097,"failureMessages":["Cannot read properties of undefined (reading 'success')"],"location":{"line":363,"column":40}},{"ancestorTitles":["","HybridRefactorAgent","error handling"],"fullName":" HybridRefactorAgent error handling should handle file read errors gracefully","status":"failed","title":"should handle file read errors gracefully","duration":11,"failureMessages":["promise resolved \"{ applied_patches: [], …(7) }\" instead of rejecting"],"location":{"line":372,"column":67}},{"ancestorTitles":["","HybridRefactorAgent","error handling"],"fullName":" HybridRefactorAgent error handling should handle empty boundaries array","status":"failed","title":"should handle empty boundaries array","duration":6,"failureMessages":["Target cannot be null or undefined."],"location":{"line":380,"column":38}},{"ancestorTitles":["","HybridRefactorAgent","error handling"],"fullName":" HybridRefactorAgent error handling should handle invalid project structure","status":"failed","title":"should handle invalid project structure","duration":2098,"failureMessages":["promise resolved \"{ applied_patches: [], …(7) }\" instead of rejecting"],"location":{"line":386,"column":67}},{"ancestorTitles":["","HybridRefactorAgent","metrics collection"],"fullName":" HybridRefactorAgent metrics collection should collect transformation metrics","status":"failed","title":"should collect transformation metrics","duration":2098,"failureMessages":["expected undefined not to be undefined"],"location":{"line":395,"column":30}},{"ancestorTitles":["","HybridRefactorAgent","metrics collection"],"fullName":" HybridRefactorAgent metrics collection should track performance metrics","status":"failed","title":"should track performance metrics","duration":2098,"failureMessages":["Cannot read properties of undefined (reading 'performance')"],"location":{"line":409,"column":29}}],"startTime":1750503359849,"endTime":1750503388820,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/hybrid-refactor-agent.test.ts"},{"assertionResults":[{"ancestorTitles":["","IncrementalMigrationRunner","constructor"],"fullName":" IncrementalMigrationRunner constructor should initialize with correct name and description","status":"passed","title":"should initialize with correct name and description","duration":2,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","execute"],"fullName":" IncrementalMigrationRunner execute should create stages from refactor plan","status":"passed","title":"should create stages from refactor plan","duration":9,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","execute"],"fullName":" IncrementalMigrationRunner execute should execute stages in order","status":"passed","title":"should execute stages in order","duration":4,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","execute"],"fullName":" IncrementalMigrationRunner execute should handle stage failures appropriately","status":"passed","title":"should handle stage failures appropriately","duration":2,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","execute"],"fullName":" IncrementalMigrationRunner execute should create stage backups when configured","status":"passed","title":"should create stage backups when configured","duration":5,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","execute"],"fullName":" IncrementalMigrationRunner execute should respect stage priorities","status":"passed","title":"should respect stage priorities","duration":2,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","execute"],"fullName":" IncrementalMigrationRunner execute should handle dependency checking","status":"passed","title":"should handle dependency checking","duration":3,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","execute"],"fullName":" IncrementalMigrationRunner execute should resume from specific stage","status":"passed","title":"should resume from specific stage","duration":3,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","execute"],"fullName":" IncrementalMigrationRunner execute should skip specified stages","status":"passed","title":"should skip specified stages","duration":2,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","execute"],"fullName":" IncrementalMigrationRunner execute should attempt build fixes on failure","status":"passed","title":"should attempt build fixes on failure","duration":2,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","execute"],"fullName":" IncrementalMigrationRunner execute should generate appropriate recommendations","status":"passed","title":"should generate appropriate recommendations","duration":3,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","stage creation"],"fullName":" IncrementalMigrationRunner stage creation should create foundation stage for module creation","status":"passed","title":"should create foundation stage for module creation","duration":2,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","stage creation"],"fullName":" IncrementalMigrationRunner stage creation should batch remaining patches appropriately","status":"passed","title":"should batch remaining patches appropriately","duration":1,"failureMessages":[]},{"ancestorTitles":["","IncrementalMigrationRunner","patch application"],"fullName":" IncrementalMigrationRunner patch application should create directories for new files","status":"passed","title":"should create directories for new files","duration":1,"failureMessages":[]}],"startTime":1750503358892,"endTime":1750503358933,"status":"passed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/incremental-migration-runner.test.ts"}]}