{"numTotalTestSuites":60,"numPassedTestSuites":60,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":138,"numPassedTests":39,"numFailedTests":99,"numPendingTests":0,"numTodoTests":0,"startTime":1750487153268,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["","E2E: CLI Commands","vf discover command"],"fullName":" E2E: CLI Commands vf discover command should discover boundaries in Go project","status":"failed","title":"should discover boundaries in Go project","duration":117,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":44,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","vf discover command"],"fullName":" E2E: CLI Commands vf discover command should handle empty projects gracefully","status":"failed","title":"should handle empty projects gracefully","duration":11,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":65,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","vf plan command"],"fullName":" E2E: CLI Commands vf plan command should generate architectural plan","status":"failed","title":"should generate architectural plan","duration":50,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":79,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","vf plan command"],"fullName":" E2E: CLI Commands vf plan command should show AI discovery results","status":"failed","title":"should show AI discovery results","duration":104,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":101,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","vf refactor command"],"fullName":" E2E: CLI Commands vf refactor command should execute refactoring in dry-run mode","status":"failed","title":"should execute refactoring in dry-run mode","duration":44,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":121,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","vf refactor command"],"fullName":" E2E: CLI Commands vf refactor command should apply changes with --apply flag","status":"failed","title":"should apply changes with --apply flag","duration":36,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":139,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","vf refactor command"],"fullName":" E2E: CLI Commands vf refactor command should fail gracefully when plan files are missing","status":"failed","title":"should fail gracefully when plan files are missing","duration":24,"failureMessages":["expected 'Should have thrown an error' to contain 'Required files not found'"],"location":{"line":158,"column":31}},{"ancestorTitles":["","E2E: CLI Commands","vf auto command"],"fullName":" E2E: CLI Commands vf auto command should execute complete workflow in dry-run mode","status":"failed","title":"should execute complete workflow in dry-run mode","duration":29,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":173,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","vf auto command"],"fullName":" E2E: CLI Commands vf auto command should apply changes with --apply flag","status":"failed","title":"should apply changes with --apply flag","duration":33,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":190,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","vf auto command"],"fullName":" E2E: CLI Commands vf auto command should support language and pattern options","status":"failed","title":"should support language and pattern options","duration":45,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":211,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","vf auto command"],"fullName":" E2E: CLI Commands vf auto command should respect timeout option","status":"failed","title":"should respect timeout option","duration":16,"failureMessages":["expected 'Should have timed out' to contain 'Timeout reached'"],"location":{"line":226,"column":31}},{"ancestorTitles":["","E2E: CLI Commands","vf estimate command"],"fullName":" E2E: CLI Commands vf estimate command should provide cost estimation","status":"failed","title":"should provide cost estimation","duration":15,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":240,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","vf estimate command"],"fullName":" E2E: CLI Commands vf estimate command should show detailed breakdown with --detailed flag","status":"failed","title":"should show detailed breakdown with --detailed flag","duration":19,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":255,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","vf full command"],"fullName":" E2E: CLI Commands vf full command should execute complete pipeline","status":"failed","title":"should execute complete pipeline","duration":17,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":269,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","vf full command"],"fullName":" E2E: CLI Commands vf full command should apply changes with --apply flag","status":"failed","title":"should apply changes with --apply flag","duration":15,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":283,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","CLI error handling"],"fullName":" E2E: CLI Commands CLI error handling should handle non-existent directories","status":"failed","title":"should handle non-existent directories","duration":5,"failureMessages":["expected 'Should have thrown an error' to contain 'not found'"],"location":{"line":303,"column":31}},{"ancestorTitles":["","E2E: CLI Commands","CLI error handling"],"fullName":" E2E: CLI Commands CLI error handling should show help with --help flag","status":"failed","title":"should show help with --help flag","duration":5,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":313,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","CLI error handling"],"fullName":" E2E: CLI Commands CLI error handling should show version with --version flag","status":"failed","title":"should show version with --version flag","duration":38,"failureMessages":[".toMatch() expects to receive a string, but got undefined"],"location":{"line":327,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","Configuration and output files"],"fullName":" E2E: CLI Commands Configuration and output files should create .vibeflow directory structure","status":"failed","title":"should create .vibeflow directory structure","duration":100,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":342,"column":22}},{"ancestorTitles":["","E2E: CLI Commands","Configuration and output files"],"fullName":" E2E: CLI Commands Configuration and output files should generate valid JSON output files","status":"failed","title":"should generate valid JSON output files","duration":38,"failureMessages":["ENOENT: no such file or directory, open '/tmp/e2e-cli-1750487155131-ebst2dxvp/.vibeflow/domain-map.json'"]},{"ancestorTitles":["","E2E: CLI Commands","Performance and reliability"],"fullName":" E2E: CLI Commands Performance and reliability should complete commands within reasonable time","status":"passed","title":"should complete commands within reasonable time","duration":47,"failureMessages":[]},{"ancestorTitles":["","E2E: CLI Commands","Performance and reliability"],"fullName":" E2E: CLI Commands Performance and reliability should be idempotent - running multiple times should produce same results","status":"failed","title":"should be idempotent - running multiple times should produce same results","duration":50,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":407,"column":23}}],"startTime":1750487154368,"endTime":1750487155267,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/e2e/cli-commands.test.ts"},{"assertionResults":[{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should execute complete Go project transformation","status":"failed","title":"should execute complete Go project transformation","duration":44,"failureMessages":["Cannot read properties of undefined (reading 'split')"],"location":{"line":182,"column":27}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should handle TypeScript project transformation","status":"failed","title":"should handle TypeScript project transformation","duration":34,"failureMessages":["VibeFlow config file not found: vibeflow.config.yaml"],"location":{"line":11,"column":13}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should handle workflow errors gracefully with rollback","status":"failed","title":"should handle workflow errors gracefully with rollback","duration":19,"failureMessages":["Cannot read properties of undefined (reading 'split')"],"location":{"line":182,"column":27}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should demonstrate progressive enhancement with AI fallback","status":"failed","title":"should demonstrate progressive enhancement with AI fallback","duration":21,"failureMessages":["Cannot read properties of undefined (reading 'split')"],"location":{"line":182,"column":27}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should handle large projects efficiently","status":"failed","title":"should handle large projects efficiently","duration":29,"failureMessages":["Cannot read properties of undefined (reading 'split')"],"location":{"line":182,"column":27}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should preserve business logic during transformation","status":"failed","title":"should preserve business logic during transformation","duration":26,"failureMessages":["Cannot read properties of undefined (reading 'split')"],"location":{"line":182,"column":27}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should provide comprehensive metrics and reporting","status":"failed","title":"should provide comprehensive metrics and reporting","duration":25,"failureMessages":["Cannot read properties of undefined (reading 'split')"],"location":{"line":182,"column":27}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should validate applied changes mode","status":"failed","title":"should validate applied changes mode","duration":1019,"failureMessages":["Cannot read properties of undefined (reading 'split')"],"location":{"line":182,"column":27}},{"ancestorTitles":["","E2E: Complete Auto-Refactor Workflow"],"fullName":" E2E: Complete Auto-Refactor Workflow should handle edge cases and empty projects","status":"failed","title":"should handle edge cases and empty projects","duration":13,"failureMessages":["VibeFlow config file not found: vibeflow.config.yaml"],"location":{"line":11,"column":13}}],"startTime":1750487156001,"endTime":1750487157232,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/e2e/full-workflow.test.ts"},{"assertionResults":[{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should discover boundaries and successfully refactor them","status":"failed","title":"should discover boundaries and successfully refactor them","duration":299,"failureMessages":["expected 0 to be greater than 0"],"location":{"line":41,"column":60}},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should handle empty projects gracefully","status":"failed","title":"should handle empty projects gracefully","duration":1385,"failureMessages":["Target cannot be null or undefined."],"location":{"line":86,"column":46}},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should maintain boundary metadata through pipeline","status":"failed","title":"should maintain boundary metadata through pipeline","duration":40,"failureMessages":["expected undefined not to be undefined"],"location":{"line":98,"column":26}},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should validate generated code structure","status":"passed","title":"should validate generated code structure","duration":28,"failureMessages":[]},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should handle boundary confidence scores appropriately","status":"passed","title":"should handle boundary confidence scores appropriately","duration":50,"failureMessages":[]},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should handle file dependencies correctly","status":"passed","title":"should handle file dependencies correctly","duration":24,"failureMessages":[]},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should preserve semantic meaning across transformation","status":"passed","title":"should preserve semantic meaning across transformation","duration":22,"failureMessages":[]},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should generate appropriate test files","status":"failed","title":"should generate appropriate test files","duration":20,"failureMessages":["Cannot read properties of undefined (reading 'filter')"],"location":{"line":206,"column":54}},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should handle compilation validation","status":"failed","title":"should handle compilation validation","duration":21,"failureMessages":["expected undefined not to be undefined"],"location":{"line":224,"column":47}},{"ancestorTitles":["","Integration: Boundary Discovery → Refactoring"],"fullName":" Integration: Boundary Discovery → Refactoring should provide meaningful metrics","status":"failed","title":"should provide meaningful metrics","duration":33,"failureMessages":["expected undefined not to be undefined"],"location":{"line":239,"column":36}}],"startTime":1750487158100,"endTime":1750487160024,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/integration/boundary-to-refactor.test.ts"},{"assertionResults":[{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should estimate costs before refactoring","status":"passed","title":"should estimate costs before refactoring","duration":11,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should track actual costs during refactoring","status":"passed","title":"should track actual costs during refactoring","duration":12,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should enforce cost limits","status":"passed","title":"should enforce cost limits","duration":15,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should handle daily limit rollover","status":"passed","title":"should handle daily limit rollover","duration":9,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should provide cost breakdown for complex projects","status":"failed","title":"should provide cost breakdown for complex projects","duration":18,"failureMessages":["expected undefined not to be undefined"],"location":{"line":128,"column":32}},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should handle cost estimation errors gracefully","status":"passed","title":"should handle cost estimation errors gracefully","duration":21,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should track multiple operations","status":"passed","title":"should track multiple operations","duration":21,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should persist cost data across sessions","status":"passed","title":"should persist cost data across sessions","duration":20,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should handle concurrent cost tracking","status":"passed","title":"should handle concurrent cost tracking","duration":17,"failureMessages":[]},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should validate cost limits hierarchy","status":"failed","title":"should validate cost limits hierarchy","duration":19,"failureMessages":["promise resolved \"undefined\" instead of rejecting"],"location":{"line":214,"column":7}},{"ancestorTitles":["","Integration: Cost Management with Refactoring"],"fullName":" Integration: Cost Management with Refactoring should provide accurate cost projections","status":"passed","title":"should provide accurate cost projections","duration":13,"failureMessages":[]}],"startTime":1750487158417,"endTime":1750487158596,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/integration/cost-manager-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["","Performance Benchmarks","Boundary Discovery Performance"],"fullName":" Performance Benchmarks Boundary Discovery Performance should discover boundaries efficiently in small Go project (10 files)","status":"failed","title":"should discover boundaries efficiently in small Go project (10 files)","duration":80,"failureMessages":["Cannot read properties of undefined (reading 'match')"],"location":{"line":296,"column":36}},{"ancestorTitles":["","Performance Benchmarks","Boundary Discovery Performance"],"fullName":" Performance Benchmarks Boundary Discovery Performance should discover boundaries efficiently in small TypeScript project (10 files)","status":"failed","title":"should discover boundaries efficiently in small TypeScript project (10 files)","duration":164,"failureMessages":["Cannot read properties of undefined (reading 'match')"],"location":{"line":296,"column":36}},{"ancestorTitles":["","Performance Benchmarks","Boundary Discovery Performance"],"fullName":" Performance Benchmarks Boundary Discovery Performance should discover boundaries efficiently in medium Go project (50 files)","status":"failed","title":"should discover boundaries efficiently in medium Go project (50 files)","duration":212,"failureMessages":["Cannot read properties of undefined (reading 'match')"],"location":{"line":296,"column":36}},{"ancestorTitles":["","Performance Benchmarks","Boundary Discovery Performance"],"fullName":" Performance Benchmarks Boundary Discovery Performance should discover boundaries efficiently in medium TypeScript project (50 files)","status":"failed","title":"should discover boundaries efficiently in medium TypeScript project (50 files)","duration":103,"failureMessages":["Cannot read properties of undefined (reading 'match')"],"location":{"line":296,"column":36}},{"ancestorTitles":["","Performance Benchmarks","Boundary Discovery Performance"],"fullName":" Performance Benchmarks Boundary Discovery Performance should discover boundaries efficiently in large Go project (200 files)","status":"failed","title":"should discover boundaries efficiently in large Go project (200 files)","duration":649,"failureMessages":["Cannot read properties of undefined (reading 'match')"],"location":{"line":296,"column":36}},{"ancestorTitles":["","Performance Benchmarks","Boundary Discovery Performance"],"fullName":" Performance Benchmarks Boundary Discovery Performance should discover boundaries efficiently in large TypeScript project (200 files)","status":"failed","title":"should discover boundaries efficiently in large TypeScript project (200 files)","duration":372,"failureMessages":["Cannot read properties of undefined (reading 'match')"],"location":{"line":296,"column":36}},{"ancestorTitles":["","Performance Benchmarks","Full Refactor Performance"],"fullName":" Performance Benchmarks Full Refactor Performance should complete full refactoring workflow within time limits","status":"failed","title":"should complete full refactoring workflow within time limits","duration":40,"failureMessages":["Cannot read properties of undefined (reading 'match')"],"location":{"line":296,"column":36}},{"ancestorTitles":["","Performance Benchmarks","Full Refactor Performance"],"fullName":" Performance Benchmarks Full Refactor Performance should handle concurrent operations efficiently","status":"failed","title":"should handle concurrent operations efficiently","duration":52,"failureMessages":["Cannot read properties of undefined (reading 'match')"],"location":{"line":296,"column":36}},{"ancestorTitles":["","Performance Benchmarks","Memory Usage Benchmarks"],"fullName":" Performance Benchmarks Memory Usage Benchmarks should maintain reasonable memory usage for large projects","status":"failed","title":"should maintain reasonable memory usage for large projects","duration":563,"failureMessages":["Cannot read properties of undefined (reading 'match')"],"location":{"line":296,"column":36}},{"ancestorTitles":["","Performance Benchmarks","Scalability Tests"],"fullName":" Performance Benchmarks Scalability Tests should show linear or sub-linear scaling with project size","status":"failed","title":"should show linear or sub-linear scaling with project size","duration":12,"failureMessages":["Cannot read properties of undefined (reading 'match')"],"location":{"line":296,"column":36}},{"ancestorTitles":["","Performance Benchmarks","Error Handling Performance"],"fullName":" Performance Benchmarks Error Handling Performance should fail fast on invalid projects","status":"failed","title":"should fail fast on invalid projects","duration":4,"failureMessages":["Cannot read properties of undefined (reading 'match')"],"location":{"line":296,"column":36}}],"startTime":1750487154418,"endTime":1750487156673,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/performance/benchmark.test.ts"},{"assertionResults":[{"ancestorTitles":["","executeAutoRefactor","successful execution"],"fullName":" executeAutoRefactor successful execution should execute complete workflow in dry-run mode","status":"failed","title":"should execute complete workflow in dry-run mode","duration":62,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","successful execution"],"fullName":" executeAutoRefactor successful execution should execute complete workflow with changes applied","status":"failed","title":"should execute complete workflow with changes applied","duration":1120,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","successful execution"],"fullName":" executeAutoRefactor successful execution should call all agents in correct order","status":"failed","title":"should call all agents in correct order","duration":4,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","successful execution"],"fullName":" executeAutoRefactor successful execution should resolve absolute path correctly","status":"failed","title":"should resolve absolute path correctly","duration":6,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","error handling and rollback"],"fullName":" executeAutoRefactor error handling and rollback should handle boundary discovery failure","status":"failed","title":"should handle boundary discovery failure","duration":18,"failureMessages":["expected [Function] to throw error including 'Boundary analysis failed' but got 'Cannot read properties of undefined (…'"],"location":{"line":263,"column":7}},{"ancestorTitles":["","executeAutoRefactor","error handling and rollback"],"fullName":" executeAutoRefactor error handling and rollback should handle refactoring failure with rollback","status":"failed","title":"should handle refactoring failure with rollback","duration":1010,"failureMessages":["expected [Function] to throw error including 'Refactoring failed' but got 'Cannot read properties of undefined (…'"],"location":{"line":278,"column":7}},{"ancestorTitles":["","executeAutoRefactor","error handling and rollback"],"fullName":" executeAutoRefactor error handling and rollback should execute rollback when changes are applied and error occurs","status":"failed","title":"should execute rollback when changes are applied and error occurs","duration":1008,"failureMessages":["expected [Function] to throw error including 'Test generation failed' but got 'Cannot read properties of undefined (…'"],"location":{"line":287,"column":7}},{"ancestorTitles":["","executeAutoRefactor","error handling and rollback"],"fullName":" executeAutoRefactor error handling and rollback should not execute rollback for dry-run failures","status":"failed","title":"should not execute rollback for dry-run failures","duration":4,"failureMessages":["expected [Function] to throw error including 'Review failed' but got 'Cannot read properties of undefined (…'"],"location":{"line":298,"column":7}},{"ancestorTitles":["","executeAutoRefactor","validation pipeline"],"fullName":" executeAutoRefactor validation pipeline should run compilation validation","status":"failed","title":"should run compilation validation","duration":1008,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","validation pipeline"],"fullName":" executeAutoRefactor validation pipeline should handle compilation failures","status":"failed","title":"should handle compilation failures","duration":1007,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","validation pipeline"],"fullName":" executeAutoRefactor validation pipeline should run test validation","status":"failed","title":"should run test validation","duration":1006,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","validation pipeline"],"fullName":" executeAutoRefactor validation pipeline should generate performance metrics","status":"failed","title":"should generate performance metrics","duration":4,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","different project types"],"fullName":" executeAutoRefactor different project types should handle TypeScript projects","status":"failed","title":"should handle TypeScript projects","duration":1008,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","different project types"],"fullName":" executeAutoRefactor different project types should handle projects without known build system","status":"failed","title":"should handle projects without known build system","duration":1009,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","progress reporting"],"fullName":" executeAutoRefactor progress reporting should report progress through console logs","status":"failed","title":"should report progress through console logs","duration":6,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","progress reporting"],"fullName":" executeAutoRefactor progress reporting should report different modes correctly","status":"failed","title":"should report different modes correctly","duration":3,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","progress reporting"],"fullName":" executeAutoRefactor progress reporting should report timing information","status":"failed","title":"should report timing information","duration":4,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","auto-merge decisions"],"fullName":" executeAutoRefactor auto-merge decisions should handle auto-merge approval","status":"failed","title":"should handle auto-merge approval","duration":1008,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}},{"ancestorTitles":["","executeAutoRefactor","auto-merge decisions"],"fullName":" executeAutoRefactor auto-merge decisions should handle manual review requirement","status":"failed","title":"should handle manual review requirement","duration":1009,"failureMessages":["Cannot read properties of undefined (reading 'autoDiscoveredBoundaries')"],"location":{"line":68,"column":51}}],"startTime":1750487155259,"endTime":1750487165572,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/auto-refactor-workflow.test.ts"},{"assertionResults":[{"ancestorTitles":["","CostManager","constructor"],"fullName":" CostManager constructor should initialize with project path","status":"passed","title":"should initialize with project path","duration":2,"failureMessages":[]},{"ancestorTitles":["","CostManager","initialize"],"fullName":" CostManager initialize should create config directory if not exists","status":"passed","title":"should create config directory if not exists","duration":3,"failureMessages":[]},{"ancestorTitles":["","CostManager","initialize"],"fullName":" CostManager initialize should create default config if not exists","status":"passed","title":"should create default config if not exists","duration":3,"failureMessages":[]},{"ancestorTitles":["","CostManager","initialize"],"fullName":" CostManager initialize should load existing config if available","status":"passed","title":"should load existing config if available","duration":2,"failureMessages":[]},{"ancestorTitles":["","CostManager","checkLimits"],"fullName":" CostManager checkLimits should allow operation within per-run limit","status":"passed","title":"should allow operation within per-run limit","duration":1,"failureMessages":[]},{"ancestorTitles":["","CostManager","checkLimits"],"fullName":" CostManager checkLimits should reject operation exceeding per-run limit","status":"passed","title":"should reject operation exceeding per-run limit","duration":4,"failureMessages":[]},{"ancestorTitles":["","CostManager","checkLimits"],"fullName":" CostManager checkLimits should reject operation exceeding daily limit","status":"passed","title":"should reject operation exceeding daily limit","duration":3,"failureMessages":[]},{"ancestorTitles":["","CostManager","checkLimits"],"fullName":" CostManager checkLimits should reject operation exceeding monthly limit","status":"failed","title":"should reject operation exceeding monthly limit","duration":10,"failureMessages":["expected 'Would exceed daily limit. Current: $1…' to contain 'monthly limit'"],"location":{"line":148,"column":29}},{"ancestorTitles":["","CostManager","recordUsage"],"fullName":" CostManager recordUsage should record operation usage","status":"passed","title":"should record operation usage","duration":2,"failureMessages":[]},{"ancestorTitles":["","CostManager","recordUsage"],"fullName":" CostManager recordUsage should update usage report after recording","status":"passed","title":"should update usage report after recording","duration":1,"failureMessages":[]},{"ancestorTitles":["","CostManager","getUsageReport"],"fullName":" CostManager getUsageReport should return empty usage for new instance","status":"passed","title":"should return empty usage for new instance","duration":0,"failureMessages":[]},{"ancestorTitles":["","CostManager","getUsageReport"],"fullName":" CostManager getUsageReport should return current limits","status":"passed","title":"should return current limits","duration":1,"failureMessages":[]},{"ancestorTitles":["","CostManager","updateLimits"],"fullName":" CostManager updateLimits should update cost limits","status":"failed","title":"should update cost limits","duration":9,"failureMessages":["expected \"writeFile\" to be called with arguments: [ …(2) ]\n\nReceived: \n\n  1st writeFile call:\n\n  Array [\n    \"/tmp/test-project/.vibeflow/cost-limits.json\",\n-   StringContaining \"\\\"daily\\\":100\",\n+   \"{\n+   \\\"daily\\\": 100,\n+   \\\"monthly\\\": 200,\n+   \\\"perRun\\\": 15\n+ }\",\n  ]\n\n\nNumber of calls: 1\n"],"location":{"line":224,"column":34}},{"ancestorTitles":["","CostManager","error handling"],"fullName":" CostManager error handling should handle file system errors gracefully","status":"passed","title":"should handle file system errors gracefully","duration":2,"failureMessages":[]},{"ancestorTitles":["","CostManager","error handling"],"fullName":" CostManager error handling should handle corrupted config files","status":"passed","title":"should handle corrupted config files","duration":1,"failureMessages":[]},{"ancestorTitles":["","CostManager","error handling"],"fullName":" CostManager error handling should handle missing usage file gracefully","status":"passed","title":"should handle missing usage file gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","CostManager","usage history management"],"fullName":" CostManager usage history management should filter out old usage records","status":"passed","title":"should filter out old usage records","duration":1,"failureMessages":[]}],"startTime":1750487157958,"endTime":1750487158005,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/cost-manager.test.ts"},{"assertionResults":[{"ancestorTitles":["","EnhancedBoundaryAgent","constructor"],"fullName":" EnhancedBoundaryAgent constructor should initialize with project path","status":"failed","title":"should initialize with project path","duration":12,"failureMessages":["expected undefined to be '/tmp/test-project' // Object.is equality"],"location":{"line":45,"column":36}},{"ancestorTitles":["","EnhancedBoundaryAgent","constructor"],"fullName":" EnhancedBoundaryAgent constructor should accept optional config and user boundaries","status":"passed","title":"should accept optional config and user boundaries","duration":3,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","analyzeBoundaries"],"fullName":" EnhancedBoundaryAgent analyzeBoundaries should discover boundaries from Go code","status":"passed","title":"should discover boundaries from Go code","duration":28,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","analyzeBoundaries"],"fullName":" EnhancedBoundaryAgent analyzeBoundaries should generate confidence metrics","status":"failed","title":"should generate confidence metrics","duration":10,"failureMessages":["expected 0 to be greater than 0"],"location":{"line":181,"column":77}},{"ancestorTitles":["","EnhancedBoundaryAgent","analyzeBoundaries"],"fullName":" EnhancedBoundaryAgent analyzeBoundaries should discover domain-specific boundaries","status":"failed","title":"should discover domain-specific boundaries","duration":13,"failureMessages":["expected [] to include 'user'"],"location":{"line":193,"column":29}},{"ancestorTitles":["","EnhancedBoundaryAgent","analyzeBoundaries"],"fullName":" EnhancedBoundaryAgent analyzeBoundaries should assign semantic keywords to boundaries","status":"failed","title":"should assign semantic keywords to boundaries","duration":8,"failureMessages":["expected undefined not to be undefined"],"location":{"line":202,"column":28}},{"ancestorTitles":["","EnhancedBoundaryAgent","analyzeBoundaries"],"fullName":" EnhancedBoundaryAgent analyzeBoundaries should generate recommendations","status":"passed","title":"should generate recommendations","duration":10,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","analyzeBoundaries"],"fullName":" EnhancedBoundaryAgent analyzeBoundaries should write output files","status":"failed","title":"should write output files","duration":13,"failureMessages":["expected \"writeFile\" to be called with arguments: [ …(2) ]\n\nReceived: \n\n\n\nNumber of calls: 0\n"],"location":{"line":223,"column":34}},{"ancestorTitles":["","EnhancedBoundaryAgent","error handling"],"fullName":" EnhancedBoundaryAgent error handling should handle file read errors gracefully","status":"failed","title":"should handle file read errors gracefully","duration":15,"failureMessages":["promise resolved \"{ domainMap: { …(6) }, …(4) }\" instead of rejecting"],"location":{"line":240,"column":45}},{"ancestorTitles":["","EnhancedBoundaryAgent","error handling"],"fullName":" EnhancedBoundaryAgent error handling should handle empty project directories","status":"passed","title":"should handle empty project directories","duration":7,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","error handling"],"fullName":" EnhancedBoundaryAgent error handling should handle non-source files gracefully","status":"passed","title":"should handle non-source files gracefully","duration":9,"failureMessages":[]},{"ancestorTitles":["","EnhancedBoundaryAgent","language detection"],"fullName":" EnhancedBoundaryAgent language detection should detect Go projects","status":"failed","title":"should detect Go projects","duration":6,"failureMessages":["Cannot read properties of undefined (reading 'language')"],"location":{"line":269,"column":55}},{"ancestorTitles":["","EnhancedBoundaryAgent","language detection"],"fullName":" EnhancedBoundaryAgent language detection should detect TypeScript projects","status":"failed","title":"should detect TypeScript projects","duration":7,"failureMessages":["Cannot read properties of undefined (reading 'language')"],"location":{"line":283,"column":55}},{"ancestorTitles":["","EnhancedBoundaryAgent","boundary merging"],"fullName":" EnhancedBoundaryAgent boundary merging should merge user-defined boundaries with auto-discovered ones","status":"failed","title":"should merge user-defined boundaries with auto-discovered ones","duration":7,"failureMessages":["expected undefined not to be undefined"],"location":{"line":307,"column":28}},{"ancestorTitles":["","EnhancedBoundaryAgent","confidence calculation"],"fullName":" EnhancedBoundaryAgent confidence calculation should calculate higher confidence for well-structured code","status":"failed","title":"should calculate higher confidence for well-structured code","duration":7,"failureMessages":["actual value must be number or bigint, received \"undefined\""],"location":{"line":336,"column":40}},{"ancestorTitles":["","EnhancedBoundaryAgent","confidence calculation"],"fullName":" EnhancedBoundaryAgent confidence calculation should calculate lower confidence for mixed code","status":"passed","title":"should calculate lower confidence for mixed code","duration":6,"failureMessages":[]}],"startTime":1750487157241,"endTime":1750487157404,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/enhanced-boundary-agent.test.ts"},{"assertionResults":[{"ancestorTitles":["","HybridRefactorAgent","constructor"],"fullName":" HybridRefactorAgent constructor should initialize with project path","status":"passed","title":"should initialize with project path","duration":3,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","constructor"],"fullName":" HybridRefactorAgent constructor should detect AI availability","status":"passed","title":"should detect AI availability","duration":1,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","estimateCost"],"fullName":" HybridRefactorAgent estimateCost should estimate cost for boundaries","status":"passed","title":"should estimate cost for boundaries","duration":3,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","estimateCost"],"fullName":" HybridRefactorAgent estimateCost should provide detailed cost breakdown","status":"failed","title":"should provide detailed cost breakdown","duration":14,"failureMessages":["expected undefined not to be undefined"],"location":{"line":112,"column":34}},{"ancestorTitles":["","HybridRefactorAgent","estimateCost"],"fullName":" HybridRefactorAgent estimateCost should estimate different costs for different file sizes","status":"failed","title":"should estimate different costs for different file sizes","duration":3,"failureMessages":["expected 0.0025872 to be greater than 0.0025872"],"location":{"line":127,"column":43}},{"ancestorTitles":["","HybridRefactorAgent","executeRefactoring"],"fullName":" HybridRefactorAgent executeRefactoring should execute refactoring in template mode","status":"failed","title":"should execute refactoring in template mode","duration":2348,"failureMessages":["expected undefined to be an instance of Array"],"location":{"line":179,"column":38}},{"ancestorTitles":["","HybridRefactorAgent","executeRefactoring"],"fullName":" HybridRefactorAgent executeRefactoring should generate clean architecture structure","status":"failed","title":"should generate clean architecture structure","duration":2348,"failureMessages":["Cannot read properties of undefined (reading 'tokensUsed')"],"location":{"line":91,"column":28}},{"ancestorTitles":["","HybridRefactorAgent","executeRefactoring"],"fullName":" HybridRefactorAgent executeRefactoring should generate tests for each layer","status":"failed","title":"should generate tests for each layer","duration":2345,"failureMessages":["Cannot read properties of undefined (reading 'tokensUsed')"],"location":{"line":91,"column":28}},{"ancestorTitles":["","HybridRefactorAgent","executeRefactoring"],"fullName":" HybridRefactorAgent executeRefactoring should handle dry-run mode","status":"failed","title":"should handle dry-run mode","duration":2341,"failureMessages":["Cannot read properties of undefined (reading 'tokensUsed')"],"location":{"line":91,"column":28}},{"ancestorTitles":["","HybridRefactorAgent","executeRefactoring"],"fullName":" HybridRefactorAgent executeRefactoring should apply changes when requested","status":"failed","title":"should apply changes when requested","duration":2344,"failureMessages":["Cannot read properties of undefined (reading 'tokensUsed')"],"location":{"line":91,"column":28}},{"ancestorTitles":["","HybridRefactorAgent","template generation"],"fullName":" HybridRefactorAgent template generation should generate domain entities","status":"failed","title":"should generate domain entities","duration":3,"failureMessages":["agent.generateCleanArchitecture is not a function"],"location":{"line":235,"column":61}},{"ancestorTitles":["","HybridRefactorAgent","template generation"],"fullName":" HybridRefactorAgent template generation should generate usecase services","status":"failed","title":"should generate usecase services","duration":2,"failureMessages":["agent.generateCleanArchitecture is not a function"],"location":{"line":253,"column":61}},{"ancestorTitles":["","HybridRefactorAgent","template generation"],"fullName":" HybridRefactorAgent template generation should generate repository interfaces","status":"failed","title":"should generate repository interfaces","duration":1,"failureMessages":["agent.generateCleanArchitecture is not a function"],"location":{"line":269,"column":61}},{"ancestorTitles":["","HybridRefactorAgent","template generation"],"fullName":" HybridRefactorAgent template generation should generate HTTP handlers","status":"failed","title":"should generate HTTP handlers","duration":2,"failureMessages":["agent.generateCleanArchitecture is not a function"],"location":{"line":291,"column":61}},{"ancestorTitles":["","HybridRefactorAgent","AI enhancement"],"fullName":" HybridRefactorAgent AI enhancement should use AI when available","status":"failed","title":"should use AI when available","duration":2136,"failureMessages":["this.claudeCode.getUsage is not a function"],"location":{"line":89,"column":43}},{"ancestorTitles":["","HybridRefactorAgent","AI enhancement"],"fullName":" HybridRefactorAgent AI enhancement should fallback to templates when AI fails","status":"failed","title":"should fallback to templates when AI fails","duration":2133,"failureMessages":["this.claudeCode.getUsage is not a function"],"location":{"line":89,"column":43}},{"ancestorTitles":["","HybridRefactorAgent","validation"],"fullName":" HybridRefactorAgent validation should validate generated code","status":"failed","title":"should validate generated code","duration":2095,"failureMessages":["Cannot read properties of undefined (reading 'tokensUsed')"],"location":{"line":91,"column":28}},{"ancestorTitles":["","HybridRefactorAgent","validation"],"fullName":" HybridRefactorAgent validation should handle compilation failures","status":"failed","title":"should handle compilation failures","duration":2095,"failureMessages":["Cannot read properties of undefined (reading 'tokensUsed')"],"location":{"line":91,"column":28}},{"ancestorTitles":["","HybridRefactorAgent","error handling"],"fullName":" HybridRefactorAgent error handling should handle file read errors gracefully","status":"failed","title":"should handle file read errors gracefully","duration":8,"failureMessages":["expected [Function] to throw error including 'File not found' but got 'Cannot read properties of undefined (…'"],"location":{"line":366,"column":7}},{"ancestorTitles":["","HybridRefactorAgent","error handling"],"fullName":" HybridRefactorAgent error handling should handle empty boundaries array","status":"failed","title":"should handle empty boundaries array","duration":2,"failureMessages":["Cannot read properties of undefined (reading 'tokensUsed')"],"location":{"line":91,"column":28}},{"ancestorTitles":["","HybridRefactorAgent","error handling"],"fullName":" HybridRefactorAgent error handling should handle invalid project structure","status":"passed","title":"should handle invalid project structure","duration":2097,"failureMessages":[]},{"ancestorTitles":["","HybridRefactorAgent","metrics collection"],"fullName":" HybridRefactorAgent metrics collection should collect transformation metrics","status":"failed","title":"should collect transformation metrics","duration":2094,"failureMessages":["Cannot read properties of undefined (reading 'tokensUsed')"],"location":{"line":91,"column":28}},{"ancestorTitles":["","HybridRefactorAgent","metrics collection"],"fullName":" HybridRefactorAgent metrics collection should track performance metrics","status":"failed","title":"should track performance metrics","duration":2095,"failureMessages":["Cannot read properties of undefined (reading 'tokensUsed')"],"location":{"line":91,"column":28}}],"startTime":1750487154825,"endTime":1750487181349,"status":"failed","message":"","name":"/Users/tmita/workspace/vibeflow/tests/unit/hybrid-refactor-agent.test.ts"}]}